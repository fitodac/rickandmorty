{"ast":null,"code":"var _jsxFileName = \"/Users/fitodac/Sites/henry/rick-and-morty/src/components/Cards/Cards.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport Card from '../Card/Card';\nimport styles from './Cards.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Cards = props => {\n  _s();\n  // const { characters, eliminar } = props\n  const [characters, setCharacters] = useState({});\n  useEffect(() => {\n    const arr = [];\n    for (let i = 1; i <= 10; i++) arr.push(i);\n    fetch(`https://rickandmortyapi.com/api/character/${arr.toString()}`).then(resp => resp.json()).then(data => {\n      console.log('data', data);\n      setCharacters({\n        ...data\n      });\n      console.log('characters', characters);\n      // if (data.name) {\n      // \tsetCharacters((oldChars) => [...oldChars, data]);\n      // } else {\n      // \twindow.alert(\"No hay personajes con ese ID\");\n      // }\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 3\n  }, this)\n  // <div className={styles.contenedor}>\n  // \t{ characters && characters.map((personaje) => (\n  // \t\t<div key={personaje.id} className={styles.card}>\n  // \t\t\t{<Card personaje={personaje} eliminar={eliminar} />}\n  // \t\t</div>\n  // \t)) }\n  // </div>\n  ;\n};\n_s(Cards, \"Bg/ff8Il98rmR38xI+HPK+3v9Zg=\");\n_c = Cards;\nexport default Cards;\nvar _c;\n$RefreshReg$(_c, \"Cards\");","map":{"version":3,"names":["React","useState","useEffect","Card","styles","Cards","props","characters","setCharacters","arr","i","push","fetch","toString","then","resp","json","data","console","log"],"sources":["/Users/fitodac/Sites/henry/rick-and-morty/src/components/Cards/Cards.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react'\n\nimport Card from '../Card/Card'\n\nimport styles from './Cards.css'\n\n\nconst Cards = (props) => {\n  // const { characters, eliminar } = props\n\tconst [ characters, setCharacters ] = useState({})\n\n\tuseEffect(() => {\n\t\tconst arr = []\n\t\tfor(let i = 1; i <= 10; i++) arr.push(i)\n\n\t\tfetch(`https://rickandmortyapi.com/api/character/${arr.toString()}`)\n\t\t\t.then(resp => resp.json())\n\t\t\t.then(data => {\n\t\t\t\tconsole.log('data', data)\n\t\t\t\tsetCharacters({...data})\n\n\t\t\t\tconsole.log('characters', characters)\n\t\t\t\t// if (data.name) {\n\t\t\t\t// \tsetCharacters((oldChars) => [...oldChars, data]);\n\t\t\t\t// } else {\n\t\t\t\t// \twindow.alert(\"No hay personajes con ese ID\");\n\t\t\t\t// }\n\t\t\t})\n\n\t}, [])\n\n\n  return (\n\t\t<div className=\"\">\n\t\t\t{/* { \n\t\t\t\tcharacters && characters.forEach(c => (\n\t\t\t\t\t<div></div>\n\t\t\t\t))\n\t\t\t} */}\n\t\t\t{/* <pre>{ JSON.stringify(characters) }</pre> */}\n\t\t</div>\n\t\t// <div className={styles.contenedor}>\n\t\t// \t{ characters && characters.map((personaje) => (\n\t\t// \t\t<div key={personaje.id} className={styles.card}>\n\t\t// \t\t\t{<Card personaje={personaje} eliminar={eliminar} />}\n\t\t// \t\t</div>\n\t\t// \t)) }\n\t\t// </div>\n  );\n}\n\nexport default Cards"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAElD,OAAOC,IAAI,MAAM,cAAc;AAE/B,OAAOC,MAAM,MAAM,aAAa;AAAA;AAGhC,MAAMC,KAAK,GAAIC,KAAK,IAAK;EAAA;EACvB;EACD,MAAM,CAAEC,UAAU,EAAEC,aAAa,CAAE,GAAGP,QAAQ,CAAC,CAAC,CAAC,CAAC;EAElDC,SAAS,CAAC,MAAM;IACf,MAAMO,GAAG,GAAG,EAAE;IACd,KAAI,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,IAAI,EAAE,EAAEA,CAAC,EAAE,EAAED,GAAG,CAACE,IAAI,CAACD,CAAC,CAAC;IAExCE,KAAK,CAAE,6CAA4CH,GAAG,CAACI,QAAQ,EAAG,EAAC,CAAC,CAClEC,IAAI,CAACC,IAAI,IAAIA,IAAI,CAACC,IAAI,EAAE,CAAC,CACzBF,IAAI,CAACG,IAAI,IAAI;MACbC,OAAO,CAACC,GAAG,CAAC,MAAM,EAAEF,IAAI,CAAC;MACzBT,aAAa,CAAC;QAAC,GAAGS;MAAI,CAAC,CAAC;MAExBC,OAAO,CAACC,GAAG,CAAC,YAAY,EAAEZ,UAAU,CAAC;MACrC;MACA;MACA;MACA;MACA;IACD,CAAC,CAAC;EAEJ,CAAC,EAAE,EAAE,CAAC;EAGL,oBACA;IAAK,SAAS,EAAC;EAAE;IAAA;IAAA;IAAA;EAAA;EAQjB;EACA;EACA;EACA;EACA;EACA;EACA;EAAA;AAEF,CAAC;AAAA,GA1CKF,KAAK;AAAA,KAALA,KAAK;AA4CX,eAAeA,KAAK;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}